---
{
  "kind": "pipeline",
  "name": "tests-stable16",
  "services": [
    {
      "commands": [
          "BRANCH='stable16' /usr/local/bin/initnc.sh",
          "echo 127.0.0.1 server >> /etc/hosts",
          "su www-data -c \"OC_PASS=user1 php /var/www/html/occ user:add --password-from-env --display-name='User One' user1\"",
          "su www-data -c \"OC_PASS=user2 php /var/www/html/occ user:add --password-from-env --display-name='User Two' user2\"",
          "su www-data -c \"OC_PASS=user3 php /var/www/html/occ user:add --password-from-env --display-name='User Three' user3\"",
          "su www-data -c \"php /var/www/html/occ user:setting user2 files quota 1G\"",
          "su www-data -c \"php /var/www/html/occ group:add users\"",
          "su www-data -c \"php /var/www/html/occ group:adduser users user1\"",
          "su www-data -c \"php /var/www/html/occ group:adduser users user2\"",
          "su www-data -c \"git clone -b stable16 https://github.com/nextcloud/activity.git /var/www/html/apps/activity\"",
          "su www-data -c \"php /var/www/html/occ app:enable activity\"",
          "su www-data -c \"git clone -b stable16 https://github.com/nextcloud/text.git /var/www/html/apps/text\"",
          "su www-data -c \"php /var/www/html/occ app:enable text\"",
          "su www-data -c \"git clone -b stable16 https://github.com/nextcloud/end_to_end_encryption.git /var/www/html/apps/end_to_end_encryption\"",
          "su www-data -c \"php /var/www/html/occ app:enable end_to_end_encryption\"",
          "/usr/local/bin/run.sh"
      ],
      "environment": {
        "EVAL": "true"
      },
      "image": "ghcr.io/nextcloud/continuous-integration-server/php-7.2:1",
      "name": "server"
    }
  ],
  "steps": [
    {
      "commands": [
          "scripts/checkIfRunDrone.sh $GIT_USERNAME $GIT_TOKEN $DRONE_PULL_REQUEST || exit 0",
          "emulator -avd android -no-snapshot -gpu swiftshader_indirect -no-window -no-audio -skin 500x833 &",
          "sed -i s'#<bool name=\"is_beta\">false</bool>#<bool name=\"is_beta\">true</bool>#'g app/src/main/res/values/setup.xml",
          "sed -i s\"#server#server#\" gradle.properties",
          "./gradlew assembleGplay",
          "./gradlew assembleGplayDebug",
          "scripts/wait_for_emulator.sh",
          "scripts/deleteOldComments.sh 'stable' 'Unit' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew jacocoTestGplayDebugUnitTestReport || scripts/uploadReport.sh $LOG_USERNAME $LOG_PASSWORD $DRONE_BUILD_NUMBER 'stable' 'Unit' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew installGplayDebugAndroidTest",
          "scripts/wait_for_server.sh 'server'",
          "scripts/deleteOldComments.sh 'stable' 'IT' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew createGplayDebugCoverageReport -Pcoverage -Pandroid.testInstrumentationRunnerArguments.notAnnotation=com.owncloud.android.utils.ScreenshotTest || scripts/uploadReport.sh $LOG_USERNAME $LOG_PASSWORD $DRONE_BUILD_NUMBER 'stable' 'IT' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew combinedTestReport"
      ],
      "environment": {
        "GIT_TOKEN": {
          "from_secret": "GIT_TOKEN"
        },
        "GIT_USERNAME": {
          "from_secret": "GIT_USERNAME"
        },
        "LOG_PASSWORD": {
          "from_secret": "LOG_PASSWORD"
        },
        "LOG_USERNAME": {
          "from_secret": "LOG_USERNAME"
        }
      },
      "image": "ghcr.io/nextcloud/continuous-integration-android8:2",
      "name": "gplay",
      "privileged": true
    }
  ],
  "trigger": {
    "branch": [
        "master",
        "stable-*"
    ],
    "event": [
        "push",
        "pull_request"
    ]
  },
  "type": "docker"
}
---
{
  "kind": "pipeline",
  "name": "tests-stable23",
  "services": [
    {
      "commands": [
          "BRANCH='stable23' /usr/local/bin/initnc.sh",
          "echo 127.0.0.1 server >> /etc/hosts",
          "su www-data -c \"OC_PASS=user1 php /var/www/html/occ user:add --password-from-env --display-name='User One' user1\"",
          "su www-data -c \"OC_PASS=user2 php /var/www/html/occ user:add --password-from-env --display-name='User Two' user2\"",
          "su www-data -c \"OC_PASS=user3 php /var/www/html/occ user:add --password-from-env --display-name='User Three' user3\"",
          "su www-data -c \"php /var/www/html/occ user:setting user2 files quota 1G\"",
          "su www-data -c \"php /var/www/html/occ group:add users\"",
          "su www-data -c \"php /var/www/html/occ group:adduser users user1\"",
          "su www-data -c \"php /var/www/html/occ group:adduser users user2\"",
          "su www-data -c \"git clone -b stable23 https://github.com/nextcloud/activity.git /var/www/html/apps/activity\"",
          "su www-data -c \"php /var/www/html/occ app:enable activity\"",
          "su www-data -c \"git clone -b stable23 https://github.com/nextcloud/text.git /var/www/html/apps/text\"",
          "su www-data -c \"php /var/www/html/occ app:enable text\"",
          "su www-data -c \"git clone -b stable23 https://github.com/nextcloud/end_to_end_encryption.git /var/www/html/apps/end_to_end_encryption\"",
          "su www-data -c \"php /var/www/html/occ app:enable end_to_end_encryption\"",
          "/usr/local/bin/run.sh"
      ],
      "environment": {
        "EVAL": "true"
      },
      "image": "ghcr.io/nextcloud/continuous-integration-server:latest",
      "name": "server"
    }
  ],
  "steps": [
    {
      "commands": [
          "scripts/checkIfRunDrone.sh $GIT_USERNAME $GIT_TOKEN $DRONE_PULL_REQUEST || exit 0",
          "emulator -avd android -no-snapshot -gpu swiftshader_indirect -no-window -no-audio -skin 500x833 &",
          "sed -i s'#<bool name=\"is_beta\">false</bool>#<bool name=\"is_beta\">true</bool>#'g app/src/main/res/values/setup.xml",
          "sed -i s\"#server#server#\" gradle.properties",
          "./gradlew assembleGplay",
          "./gradlew assembleGplayDebug",
          "scripts/wait_for_emulator.sh",
          "scripts/deleteOldComments.sh 'stable' 'Unit' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew jacocoTestGplayDebugUnitTestReport || scripts/uploadReport.sh $LOG_USERNAME $LOG_PASSWORD $DRONE_BUILD_NUMBER 'stable' 'Unit' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew installGplayDebugAndroidTest",
          "scripts/wait_for_server.sh 'server'",
          "scripts/deleteOldComments.sh 'stable' 'IT' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew createGplayDebugCoverageReport -Pcoverage -Pandroid.testInstrumentationRunnerArguments.notAnnotation=com.owncloud.android.utils.ScreenshotTest || scripts/uploadReport.sh $LOG_USERNAME $LOG_PASSWORD $DRONE_BUILD_NUMBER 'stable' 'IT' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew combinedTestReport"
      ],
      "environment": {
        "GIT_TOKEN": {
          "from_secret": "GIT_TOKEN"
        },
        "GIT_USERNAME": {
          "from_secret": "GIT_USERNAME"
        },
        "LOG_PASSWORD": {
          "from_secret": "LOG_PASSWORD"
        },
        "LOG_USERNAME": {
          "from_secret": "LOG_USERNAME"
        }
      },
      "image": "ghcr.io/nextcloud/continuous-integration-android8:2",
      "name": "gplay",
      "privileged": true
    }
  ],
  "trigger": {
    "branch": [
        "master",
        "stable-*"
    ],
    "event": [
        "push",
        "pull_request"
    ]
  },
  "type": "docker"
}
---
{
  "kind": "pipeline",
  "name": "tests-master",
  "services": [
    {
      "commands": [
          "BRANCH='master' /usr/local/bin/initnc.sh",
          "echo 127.0.0.1 server >> /etc/hosts",
          "su www-data -c \"OC_PASS=user1 php /var/www/html/occ user:add --password-from-env --display-name='User One' user1\"",
          "su www-data -c \"OC_PASS=user2 php /var/www/html/occ user:add --password-from-env --display-name='User Two' user2\"",
          "su www-data -c \"OC_PASS=user3 php /var/www/html/occ user:add --password-from-env --display-name='User Three' user3\"",
          "su www-data -c \"php /var/www/html/occ user:setting user2 files quota 1G\"",
          "su www-data -c \"php /var/www/html/occ group:add users\"",
          "su www-data -c \"php /var/www/html/occ group:adduser users user1\"",
          "su www-data -c \"php /var/www/html/occ group:adduser users user2\"",
          "su www-data -c \"git clone -b master https://github.com/nextcloud/activity.git /var/www/html/apps/activity\"",
          "su www-data -c \"php /var/www/html/occ app:enable activity\"",
          "su www-data -c \"git clone -b master https://github.com/nextcloud/text.git /var/www/html/apps/text\"",
          "su www-data -c \"php /var/www/html/occ app:enable text\"",
          "su www-data -c \"git clone -b master https://github.com/nextcloud/end_to_end_encryption.git /var/www/html/apps/end_to_end_encryption\"",
          "su www-data -c \"php /var/www/html/occ app:enable end_to_end_encryption\"",
          "/usr/local/bin/run.sh"
      ],
      "environment": {
        "EVAL": "true"
      },
      "image": "ghcr.io/nextcloud/continuous-integration-server:latest",
      "name": "server"
    }
  ],
  "steps": [
    {
      "commands": [
          "scripts/checkIfRunDrone.sh $GIT_USERNAME $GIT_TOKEN $DRONE_PULL_REQUEST || exit 0",
          "emulator -avd android -no-snapshot -gpu swiftshader_indirect -no-window -no-audio -skin 500x833 &",
          "sed -i s'#<bool name=\"is_beta\">false</bool>#<bool name=\"is_beta\">true</bool>#'g app/src/main/res/values/setup.xml",
          "sed -i s\"#server#server#\" gradle.properties",
          "./gradlew assembleGplay",
          "./gradlew assembleGplayDebug",
          "scripts/wait_for_emulator.sh",
          "scripts/deleteOldComments.sh 'stable' 'Unit' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew jacocoTestGplayDebugUnitTestReport || scripts/uploadReport.sh $LOG_USERNAME $LOG_PASSWORD $DRONE_BUILD_NUMBER 'stable' 'Unit' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew installGplayDebugAndroidTest",
          "scripts/wait_for_server.sh 'server'",
          "scripts/deleteOldComments.sh 'stable' 'IT' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew createGplayDebugCoverageReport -Pcoverage -Pandroid.testInstrumentationRunnerArguments.notAnnotation=com.owncloud.android.utils.ScreenshotTest || scripts/uploadReport.sh $LOG_USERNAME $LOG_PASSWORD $DRONE_BUILD_NUMBER 'stable' 'IT' $DRONE_PULL_REQUEST $GIT_TOKEN",
          "./gradlew combinedTestReport"
      ],
      "environment": {
        "GIT_TOKEN": {
          "from_secret": "GIT_TOKEN"
        },
        "GIT_USERNAME": {
          "from_secret": "GIT_USERNAME"
        },
        "LOG_PASSWORD": {
          "from_secret": "LOG_PASSWORD"
        },
        "LOG_USERNAME": {
          "from_secret": "LOG_USERNAME"
        }
      },
      "image": "ghcr.io/nextcloud/continuous-integration-android8:2",
      "name": "gplay",
      "privileged": true
    }
  ],
  "trigger": {
    "branch": [
        "master",
        "stable-*"
    ],
    "event": [
        "push",
        "pull_request"
    ]
  },
  "type": "docker"
}
---
{
  "kind": "pipeline",
  "name": "allScreenshots",
  "steps": [
    {
      "commands": [
          "emulator -avd android -no-snapshot -gpu swiftshader_indirect -no-window -no-audio -skin 500x833 &",
          "sed -i s'#<bool name=\"is_beta\">false</bool>#<bool name=\"is_beta\">true</bool>#'g app/src/main/res/values/setup.xml",
          "sed -i s'#showOnlyFailingTestsInReports = ciBuild#showOnlyFailingTestsInReports = false#' build.gradle",
          "scripts/wait_for_emulator.sh",
          "scripts/runAllScreenshotCombinations noCI false",
          "scripts/screenshotSummary.sh"
      ],
      "environment": {
        "GIT_TOKEN": {
          "from_secret": "GIT_TOKEN"
        },
        "GIT_USERNAME": {
          "from_secret": "GIT_USERNAME"
        },
        "LOG_PASSWORD": {
          "from_secret": "LOG_PASSWORD"
        },
        "LOG_USERNAME": {
          "from_secret": "LOG_USERNAME"
        }
      },
      "image": "ghcr.io/nextcloud/continuous-integration-android8:2",
      "name": "runAllScreenshots",
      "privileged": true
    },
    {
      "image": "drillster/drone-email",
      "name": "notify",
      "settings": {
        "from": "nextcloud-drone@kaminsky.me",
        "host": {
          "from_secret": "EMAIL_HOST"
        },
        "password": {
          "from_secret": "EMAIL_PASSWORD"
        },
        "port": 587,
        "recipients": {
          "from_secret": "EMAIL_RECIPIENTS"
        },
        "recipients_only": true,
        "username": {
          "from_secret": "EMAIL_USERNAME"
        }
      },
      "when": {
        "branch": [
            "master",
            "stable-*"
        ],
        "event": [
            "push"
        ],
        "status": [
            "failure"
        ]
      }
    }
  ],
  "trigger": {
    "cron": [
        "allscreenshots"
    ],
    "event": [
        "cron"
    ]
  },
  "type": "docker"
}
