pipeline:
  compile:
    image: test:1 # nextcloudci/android:android-31
    commands:
      # uncomment gplay for Gplay
      - sh -c "env"
      - sh -c "if [ '${FLAVOUR}' = 'Gplay' ]; then sed -i '/.*com.google.*/s/^.*\\/\\///g' build.gradle; fi"

      # build app and assemble APK, in debug mode
      - ./gradlew assemble${FLAVOUR}
    when:
      matrix:
        FLAVOUR: [Generic, Gplay]

  integrationTest:
    image: test:1 # nextcloudci/android:android-31
    privileged: true
    commands:
      - emulator -avd android-27 -no-window -no-audio &
      - ./wait_for_emulator.sh
      - ./gradlew installGplayDebugAndroidTest connectedGplayDebugAndroidTest
    when:
      matrix:
        FLAVOUR: Gplay      

  lint:
    image: test:1 # nextcloudci/android:android-31
    commands:
      # needs gplay
      - sed -i '/.*com.google.*/s/^.*\\/\\///g' build.gradle
      - export BRANCH=$(scripts/lint/getBranchName.sh $GIT_USERNAME $GIT_TOKEN $DRONE_PULL_REQUEST)
      - scripts/lint/lint-up-wrapper.sh $GIT_USERNAME $GIT_TOKEN $BRANCH $LOG_USERNAME $LOG_PASSWORD $DRONE_BUILD_NUMBER
    secrets: [ GIT_USERNAME, GIT_TOKEN, LOG_USERNAME, LOG_PASSWORD ]
    when:
      matrix:
        FLAVOUR: Lint
        
  notify:
      image: drillster/drone-email
      host: $EMAIL_HOST
      port: 587
      username: $EMAIL_USERNAME
      password: $EMAIL_PASSWORD
      from: nextcloud-drone@kaminsky.me
      recipients_only: true
      recipients: [ $EMAIL_RECIPIENTS ]
      secrets: [ EMAIL_USERNAME, EMAIL_PASSWORD, EMAIL_RECIPIENTS, EMAIL_HOST ]
      when:
        event: push
        status: failure
        branch: master

matrix:
  FLAVOUR:
    - Generic
    - Gplay
    - Lint

services:
  server:
    image: server:3
    when:
      matrix:
        FLAVOUR: Gplay

branches: master
