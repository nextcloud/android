name: "Screenshot Test"

on:
    pull_request:
        branches: [ master, stable-* ]

jobs:
    screenshot:
        runs-on: macOS-latest
        strategy:
            fail-fast: false
            matrix:
                scheme: [ Light ]
                color: [ blue ]
                api-level: [ 27 ]
        steps:
            -   uses: actions/checkout@v3

            -   name: Gradle cache
                uses: actions/cache@v3
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
            -   name: AVD cache
                uses: actions/cache@v3
                id: avd-cache
                with:
                    path: |
                        ~/.android/avd/*
                        ~/.android/adb*
                    key: avd-${{ matrix.api-level }}

            -   uses: actions/setup-java@v2
                with:
                    distribution: "temurin"
                    java-version: 11

            -   name: create AVD and generate snapshot for caching
                if: steps.avd-cache.outputs.cache-hit != 'true'
                uses: reactivecircus/android-emulator-runner@v2
                with:
                    api-level: ${{ matrix.api-level }}
                    force-avd-creation: false
                    arch: x86
                    sdcard-path-or-size: 100M
                    target: google_apis
                    emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -skin 500x833
                    script: echo "Generated AVD snapshot for caching."

            -   name: Configure gradle daemon
                run: |
                    mkdir -p $HOME/.gradle
                    echo "org.gradle.jvmargs=-Xmx2g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError" > $HOME/.gradle/gradle.properties
                    echo "org.gradle.caching=true" >> $HOME/.gradle/gradle.properties

            -   name: Build gplay
                run: ./gradlew assembleGplayDebug

            -   name: Delete old comments
                if: ${{ always() }}
                run: scripts/deleteOldComments.sh "${{ matrix.color }}-${{ matrix.scheme }}" "Screenshot" ${{github.event.number}} ${{ secrets.GITHUB_TOKEN }}

            -   name: Run screenshot tests
                uses: reactivecircus/android-emulator-runner@v2
                with:
                    api-level: ${{ matrix.api-level }}
                    force-avd-creation: false
                    arch: x86
                    sdcard-path-or-size: 100M
                    target: google_apis
                    emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -skin 500x833
                    script: ./gradlew uninstallAll gplayDebugExecuteScreenshotTests -Pandroid.testInstrumentationRunnerArguments.annotation=com.owncloud.android.utils.ScreenshotTest -Pandroid.testInstrumentationRunnerArguments.COLOR=${{ matrix.color }} -Pandroid.testInstrumentationRunnerArguments.DARKMODE=${{ matrix.scheme }}
            -   name: upload failing results
                if: ${{ failure() }}
                run:
                    scripts/uploadReport.sh "${{ secrets.LOG_USERNAME }}" "${{ secrets.LOG_PASSWORD }}" ${{github.event.number}} "${{ matrix.color }}-${{ matrix.scheme }}" "Screenshot" ${{github.event.number}} ${{ secrets.GITHUB_TOKEN }}
            -   name: Archive Espresso results
                uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
                if: ${{ always() }}
                with:
                    name: Report-${{ matrix.color }}-${{ matrix.scheme }}
                    path: app/build/reports
                    retention-days: 4
