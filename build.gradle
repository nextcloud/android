// Gradle build file
//
// This project was started in Eclipse and later moved to Android Studio. In the transition, both IDEs were supported.
// Due to this, the files layout is not the usual in new projects created with Android Studio / gradle. This file
// merges declarations usually split in two separates build.gradle file, one for global settings of the project in
// its root folder, another one for the app module in subfolder of root.

buildscript {
    ext.kotlin_version = '1.4.30'
    repositories {
        google()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.2'
        classpath('com.hiya:jacoco-android:0.2')
        classpath 'gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.6.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.15.0"
        classpath "commons-httpclient:commons-httpclient:3.1@jar" // remove after entire switch to lib v2
        classpath 'com.karumi:shot:5.5.1'
        classpath "org.jlleitschuh.gradle:ktlint-gradle:10.0.0"
    }
}

apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'com.github.spotbugs'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply plugin: 'com.github.spotbugs'

subprojects {
    apply plugin: "org.jlleitschuh.gradle.ktlint" // Version should be inherited from parent

    // Optionally configure plugin
    ktlint {
        debug = true
    }
}

configurations {
    ktlint
}

ext {
    jacocoVersion = "0.8.2"
    daggerVersion = "2.32"
    markwonVersion = "4.6.2"
    prismVersion = "2.0.0"
    butterknifeVersion = "10.2.3"
    androidLibraryVersion = "master-SNAPSHOT"
    mockitoVersion = "3.8.0"
    mockkVersion = "1.10.4"
    powermockVersion = "2.0.9"
    byteBuddyVersion = "1.10.21"
    espressoVersion = "3.3.0"
    workRuntime = "2.5.0"

    ciBuild = System.getenv("CI") == "true"

    // allows for -D pre-dex=false to be set
    preDexEnabled = "true" == System.getProperty("pre-dex", "true")
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }

        flatDir {
            dirs 'libs'
        }
    }
}

// semantic versioning for version code
def versionMajor = 3
def versionMinor = 16
def versionPatch = 0
def versionBuild = 0 // 0-50=Alpha / 51-98=RC / 90-99=stable

spotbugs {
    toolVersion = '3.1.12'
}

tasks.withType(Test) {
    // increased logging for tests
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.register("combinedTestReport", JacocoReport) {

    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }

    additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(subprojects.sourceSets.main.output)
    executionData.setFrom project.fileTree(dir: project.buildDir, includes: [
        'jacoco/testGplayDebugUnitTest.exec', 'outputs/code-coverage/connected/flavors/GPLAY/*coverage.ec'
    ])
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "--reporter=plain", "--reporter=plain,output=${buildDir}/ktlint.txt,src/**/*.kt"
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

detekt {
    reports {
        xml {
            enabled = false
        }
    }
    config = files("detekt.yml")
    input = files("src/")
}
